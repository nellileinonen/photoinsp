{"version":3,"sources":["redux/photosSlice.ts","redux/rootReducer.ts","store.ts","components/header/Header.tsx","components/photolist/Thumbnail.tsx","components/photolist/ShowMore.tsx","components/photolist/Photolist.tsx","components/header/Modal.tsx","components/header/Info.tsx","components/photo/Photo.tsx","RootRoutes.tsx","App.tsx","index.tsx"],"names":["fetchPhotos","createAsyncThunk","pageNumber","a","axios","get","params","page","response","Array","isArray","data","console","log","newPhotos","map","item","id","urls","thumb","alt_description","created_at","regular","user","name","username","profile_image","small","message","photosSlice","createSlice","initialState","photos","status","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","concat","rejected","rootReducer","combineReducers","photosReducer","store","configureStore","reducer","Header","location","useLocation","to","pathname","background","Thumbnail","photoId","thumbUrl","alt","src","ShowMore","handleShowMore","onClick","Photolist","dispatch","useDispatch","useSelector","photosStatus","useEffect","photo","Modal","children","history","useHistory","modalRef","useRef","handleClickOutside","e","current","contains","target","goBack","document","addEventListener","removeEventListener","ref","className","Info","href","rel","Photo","RootRoutes","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.593008d4.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface PhotosState {\n  photos: any, //[],\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  page: number,\n  error: any //string | null\n}\n\nconst initialState = {\n  photos: [],\n  page: 1,\n  status: 'idle',\n  error: null,\n} as PhotosState;\n\n/* Fetch photos from API \n * Generated action types will start with 'photos/fetchPhotos'\n */\nexport const fetchPhotos = createAsyncThunk('photos/fetchPhotos', async (pageNumber: number) => {\n  const response = await axios.get('/photos', {\n    params: {\n      page: pageNumber\n    }\n  });\n\n  // If response contains data in an array, parse relevant info\n  if (Array.isArray(response.data)) {\n    console.log(response.data);\n    const newPhotos = response.data.map((item: any) => (\n      {\n        'photoId': item.id,\n        'thumbUrl': item.urls.thumb,\n        'alt': item.alt_description,\n        'createdAt': item.created_at,\n        'regularUrl': item.urls.regular,\n        'userId': item.user.id,\n        'userRealName': item.user.name,\n        'username': item.user.username,\n        'userImgUrl': item.user.profile_image.small\n      }\n    ));\n    return newPhotos;\n  } else {\n    // Return error message if response data is not an array\n    console.log(response.data.message);\n    return response.data.message;\n  }\n});\n\n/*\n *\n */\nconst photosSlice = createSlice({\n  name: 'photos',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhotos.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhotos.fulfilled, (state, action) => {\n\n      //console.log('fulfilled action: ', action);\n\n      // Photo fetching was successfull if the action payload is an array\n      if (Array.isArray(action.payload)) {\n        // Update store state: status tells that the fetch succeeded, page tells the next page\n        // to be fetched and photos is the place for photos\n        state.status = 'succeeded';\n        state.page = state.page + 1;\n        state.photos = state.photos.concat(action.payload);\n      } else {\n        // If action payload is something else than an array, fetch failed\n        state.status = 'failed';\n        state.error = 'Could not load photos.';\n        //state.error = action.payload;\n      }\n    })\n    .addCase(fetchPhotos.rejected, (state, action) => {\n      state.status = 'failed';\n      console.log('failed action: ', action);\n      state.error = 'Could not load photos.';\n      //state.error = action.payload;\n    })\n  },\n});\n\nexport default photosSlice.reducer;","import { combineReducers } from '@reduxjs/toolkit';\nimport photosReducer from './photosSlice'; \n\nexport const rootReducer = combineReducers({\n  photos: photosReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header: React.FC = () => {\n  let location = useLocation();\n\n  return (\n    <header>\n      <Link to='/'>\n        <h1>Photoinsp</h1>\n      </Link>\n      <Link to={{\n        pathname: '/info',\n        state: { background: location }\n        }}\n      >\n        info\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\n// TODO All the info as props or fetched from store directly by photoId\nconst Thumbnail: React.FC<{photoId: string, thumbUrl: string, alt: string}> = ({ photoId, thumbUrl, alt }) => {\n  return (\n    <img src={thumbUrl} alt={alt} />\n  );\n}\n\nexport default Thumbnail;","import React from 'react';\n\nconst ShowMore: React.FC<{handleShowMore: Function}> = ({ handleShowMore }) => {\n  return (\n    <div>\n      <button onClick={() => handleShowMore()}>Show more</button>\n    </div>\n  );\n}\n\nexport default ShowMore;","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotos } from '../../redux/photosSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Thumbnail from './Thumbnail';\nimport ShowMore from './ShowMore';\n\nconst Photolist: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const photos = useSelector((state: RootState) => state.photos.photos);\n  const photosStatus = useSelector((state: RootState) => state.photos.status);\n  const pageNumber = useSelector((state: RootState) => state.photos.page);\n  const error = useSelector((state: RootState) => state.photos.error);\n\n  let location = useLocation();\n\n  useEffect(() => {\n    // Only fetch initial list of photos once\n    if (photosStatus === 'idle') {\n      dispatch(fetchPhotos(pageNumber));\n    }\n  }, [photosStatus, pageNumber, dispatch]);\n\n  // Dispatch action to fetch photos\n  const handleShowMore = () => {\n    dispatch(fetchPhotos(pageNumber));\n  }\n\n  return (\n    <div>\n\n      {photosStatus === 'loading' &&\n      <div>\n        Loading...\n      </div>}\n\n      {photos.map((photo: any) =>\n      <Link\n        key={photo.photoId}\n        to={{\n          pathname: `/photo/${photo.photoId}`,\n          state: { background: location }\n        }}\n      >\n        <Thumbnail photoId={photo.photoId} thumbUrl={photo.thumbUrl} alt={photo.alt} />\n      </Link>)}\n\n      {photosStatus === 'succeeded' &&\n      <ShowMore handleShowMore={handleShowMore} />}\n\n      {photosStatus === 'failed' &&\n      <div>\n        {error}\n      </div>}\n\n    </div>\n  );\n}\n\nexport default Photolist;\n","import React, { useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport './Modal.css';\n\n// TODO: make sure the modal is accessible:\n// https://tinloof.com/blog/how-to-create-an-accessible-react-modal/\n\nconst Modal: React.FC = ({ children }) => {\n  let history = useHistory();\n\n  // TODO: read again this https://www.carlrippon.com/react-refs-typescript/\n  const modalRef = useRef<HTMLInputElement>(null);\n\n  // If mouse is clicked outside modal, close modal by navigating back in history\n  const handleClickOutside = (e: any) => {\n    if (modalRef.current !== null && (!modalRef.current.contains(e.target))) {\n      history.goBack();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  return (\n    <div ref={modalRef} className='modal-wrapper'>\n      <Link to='/'>\n        X\n      </Link>\n      {children}\n    </div>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\n//import { Link } from 'react-router-dom';\n\n//const Info: React.FC<{toggleModal(): void}> = ({ toggleModal }) => {\nconst Info: React.FC = () => {\n  return (\n    <div>\n      {/*<Link to='/'>\n        X\n      </Link>*/}\n      <p>\n        This app fetches data from\n        {' '}\n        <a href='https://unsplash.com/developers' target='_blank' rel='noreferrer'>\n          Unsplash API\n        </a>.\n      </p>\n      <p>\n        The app is created by a hobbyist web developer\n        {' '}\n        <a href='https://github.com/nellileinonen' target='_blank'  rel='noreferrer'>\n          Nelli Leinonen\n        </a>.\n        {' '}\n        Source code on\n        {' '}\n        <a href='https://github.com/nellileinonen/photoinsp' target='_blank' rel='noreferrer'>\n          GitHub\n        </a>.\n      </p>\n    </div>\n  );\n}\n\nexport default Info;","import React from 'react';\n\nconst Photo: React.FC = () => {\n  return (\n    <div>\n      img here\n      <img src='' alt='' />\n    </div>\n  );\n}\n\nexport default Photo;","import React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Photolist from './components/photolist/Photolist';\nimport Modal from './components/header/Modal';\nimport Info from './components/header/Info';\nimport Photo from './components/photo/Photo';\n\nconst RootRoutes = () => {\n  // TODO: use proper type\n  let location: any = useLocation();\n\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\">\n          <Photolist />\n        </Route>\n        <Route path='/info'>\n          <Modal children={<Info />}/>\n        </Route>\n        <Route path='/photo/:photoId'>\n          <Modal children={<Photo />}/>\n        </Route>\n      </Switch>\n\n      {/* Modal view on top of background if background is set */}\n      {background && <Route path='/info'><Modal children={<Info />}/></Route>}\n      {background && <Route path='/photo/:photoId'><Modal children={<Photo/>}/></Route>}\n\n    </div>\n  );\n};\n\nexport default RootRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/header/Header';\nimport RootRoutes from './RootRoutes';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <RootRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}