{"version":3,"sources":["redux/photolistSlice.ts","redux/photoSlice.ts","redux/rootReducer.ts","store.ts","components/header/navigation/Navigation.tsx","components/photolist/thumbnail/Thumbnail.tsx","components/photolist/showMore/ShowMore.tsx","components/photolist/Photolist.tsx","components/header/modal/Modal.tsx","components/header/info/Info.tsx","components/photo/photoMeta/PhotoMeta.tsx","components/photo/userIntro/UserIntro.tsx","components/photo/Photo.tsx","components/header/Header.tsx","components/noMatch/NoMatch.tsx","RootRoutes.tsx","App.tsx","index.tsx"],"names":["fetchPhotos","createAsyncThunk","pageNumber","a","axios","get","params","page","response","newPhotos","data","map","item","alt_description","id","urls","thumb","photolistSlice","createSlice","name","initialState","photolist","status","photoCount","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","console","log","payload","Array","isArray","filter","thumbnail","find","photoId","length","concat","rejected","fetchPhoto","date","Date","created_at","createdAt","toLocaleString","newPhoto","full","regular","user","profile_image","small","username","photoSlice","photo","rootReducer","combineReducers","photolistReducer","photoReducer","store","configureStore","reducer","Navigation","location","useLocation","atRoot","pathname","to","className","background","InfoCircleOutlined","Thumbnail","thumbUrl","alt","src","ShowMore","handleShowMore","onClick","Photolist","dispatch","useDispatch","photos","useSelector","photosStatus","useEffect","LoadingOutlined","Modal","children","history","useHistory","modalRef","useRef","closeModal","replace","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","keyListener","key","role","aria-modal","ref","Info","href","rel","PhotoMeta","fullUrl","UserIntro","userImgUrl","userRealName","Photo","photoStatus","regularUrl","Header","NoMatch","RootRoutes","undefined","pathElements","split","pop","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0997873.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport interface ThumbnailType {\n  alt: string,\n  photoId: string,\n  thumbUrl: string\n}\n\ninterface PhotolistState {\n  photolist: ThumbnailType[],\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  page: number,\n  photoCount: number,\n  error: string | null\n}\n\nconst initialState = {\n  photolist: [],\n  status: 'idle',\n  page: 1,\n  photoCount: 1,\n  error: null,\n} as PhotolistState;\n\n/* Fetch photos from API.\n * Generated action types start with 'photolist/fetchPhotos'\n */\nexport const fetchPhotos = createAsyncThunk('photolist/fetchPhotos', async (pageNumber: number) => {\n  const response = await axios.get('/photolist', {\n    params: {\n      page: pageNumber\n    }\n  });\n\n  const newPhotos: PhotolistState = response.data.map((item: any) => (\n    {\n      'alt': item.alt_description,\n      'photoId': item.id,\n      'thumbUrl': item.urls.thumb,\n    }\n  ));\n  return newPhotos;\n});\n\n/*\n * createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photolistSlice = createSlice({\n  name: 'photolist',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhotos.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhotos.fulfilled, (state, action) => {\n      console.log('fulfilled action: ', action.payload);\n      // Photo fetching was successful if the action payload is an array\n      if (Array.isArray(action.payload)) {\n\n        /* Data in Unsplash updates often and same photos can be fetched multiple times if\n         * the app is left open and after a while the user continues browsing where they left.\n         * Check that new photos fetched are not duplicates of the ones already visible.\n         */\n        const notInPhotolist = (thumbnail: ThumbnailType) => {\n          const found = state.photolist.find(item => item.photoId === thumbnail.photoId);\n          if (typeof found === 'undefined') {\n            return true;\n          } else {\n            return false;\n          }\n        }\n        const newPhotos = action.payload.filter((item: ThumbnailType) => notInPhotolist(item));\n\n        if (newPhotos.length > 0) {\n          // Update store state: status tells that the fetch succeeded, page tells the next page\n          // to be fetched and photos is the place for photos\n          state.status = 'succeeded';\n          state.page = state.page + 1;\n          state.photolist = state.photolist.concat(newPhotos);\n        } else {\n          state.status = 'failed';\n          state.error = 'Could not load photos. Please, refresh the page to get the newest content!';\n        }\n      } else {\n        // If action payload is something else than an array, fetch failed\n        state.status = 'failed';\n        state.error = 'Could not load photos.';\n      }\n    })\n    .addCase(fetchPhotos.rejected, (state, action) => {\n      console.log('failed action: ', action.payload);\n      state.status = 'failed';\n      state.error = 'Could not load photos.';\n    })\n  },\n});\n\nexport default photolistSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface Photo  {\n  alt: string,\n  createdAt: string,\n  fullUrl: string,\n  photoId: string,\n  regularUrl: string,\n  thumbUrl: string,\n  userId: string,\n  userImgUrl: string,\n  userRealName: string,\n  username: string\n}\n\ninterface PhotoState {\n  photoId: string,\n  photo: Photo,\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  error: string | null\n}\n\nconst initialState = {\n  photoId: '',\n  photo: {},\n  status: 'idle',\n  error: null,\n} as PhotoState;\n\n/* Fetch a single photo from API.\n * Generated action types will start with 'photo/fetchPhoto'\n */\nexport const fetchPhoto = createAsyncThunk('photo/fetchPhoto', async (photoId: string) => {\n  const response = await axios.get(`/photolist/${photoId}`);\n  const data = response.data;\n\n  const date = new Date(data.created_at);\n  const createdAt = date.toLocaleString('en-BG');\n\n  const newPhoto: Photo = {\n    'alt': data.alt_description,\n    'createdAt': createdAt,\n    'fullUrl': data.urls.full,\n    'photoId': data.id,\n    'regularUrl': data.urls.regular,\n    'thumbUrl': data.urls.thumb,\n    'userId': data.user.id,\n    'userImgUrl': data.user.profile_image.small,\n    'userRealName': data.user.name,\n    'username': data.user.username\n  };\n\n  return newPhoto;\n});\n\n/*\n* createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photoSlice = createSlice({\n  name: 'photo',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhoto.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhoto.fulfilled, (state, action) => {\n      console.log('fulfilled action: ', action.payload);\n      // Update store state: status tells that the fetch succeeded, photoId is the id of the fetched\n      // photo and photo contains all the necessary info of the photo\n      state.status = 'succeeded';\n      state.photoId = action.payload.photoId;\n      state.photo = action.payload;\n    })\n    .addCase(fetchPhoto.rejected, (state, action) => {\n      console.log('failed action: ', action.payload);\n      state.status = 'failed';\n      state.error = 'Could not load photo.';\n    })\n  },\n});\n\nexport default photoSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport photolistReducer from './photolistSlice';\nimport photoReducer from './photoSlice';\n\nexport const rootReducer = combineReducers({\n  photolist: photolistReducer,\n  photo: photoReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport './Navigation.scss';\n\nconst Navigation: React.FC = () => {\n  const location = useLocation();\n  const atRoot = location.pathname === '/';\n\n  return (\n    <nav>\n      <Link to='/'\n        className='home'\n      >\n        Photoinsp\n      </Link>\n      {atRoot &&\n      <Link to={{\n        pathname: '/info',\n        state: { background: location }\n        }}\n        className='info'\n      >\n        <InfoCircleOutlined />\n      </Link>\n      }\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport './Thumbnail.scss';\n\nconst Thumbnail: React.FC<{photoId: string, thumbUrl: string, alt: string}>\n  = ({ photoId, thumbUrl, alt }) => {\n  return (\n    <img src={thumbUrl} alt={alt} className='thumbnail'/>\n  );\n};\n\nexport default Thumbnail;\n","import React from 'react';\n\nimport './ShowMore.scss';\n\nconst ShowMore: React.FC<{handleShowMore: Function}> = ({ handleShowMore }) => {\n  return (\n    <div className='show-more'>\n      <button onClick={() => handleShowMore()} className='show-more-button'>Show more</button>\n    </div>\n  );\n};\n\nexport default ShowMore;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotos, ThumbnailType } from '../../redux/photolistSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nimport { Link } from 'react-router-dom';\n\nimport Thumbnail from './thumbnail/Thumbnail';\nimport ShowMore from './showMore/ShowMore';\n\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './Photolist.scss';\n\nconst Photolist: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const photos = useSelector((state: RootState) => state.photolist.photolist);\n  const photosStatus = useSelector((state: RootState) => state.photolist.status);\n  const pageNumber = useSelector((state: RootState) => state.photolist.page);\n  const error = useSelector((state: RootState) => state.photolist.error);\n\n  useEffect(() => {\n    // Only fetch initial list of photos once\n    if (photosStatus === 'idle') {\n      dispatch(fetchPhotos(pageNumber));\n    }\n  }, [photosStatus, pageNumber, dispatch]);\n\n  // Dispatch action to fetch photos\n  const handleShowMore = () => {\n    dispatch(fetchPhotos(pageNumber));\n  };\n\n  return (\n    <div>\n\n      <div className='flex-container'>\n        {photos.map((photo: ThumbnailType) =>\n        <Link\n          key={photo.photoId}\n          to={{pathname: `/photos/${photo.photoId}`}}\n          className='flex-item'\n        >\n          <Thumbnail photoId={photo.photoId} thumbUrl={photo.thumbUrl} alt={photo.alt} />\n        </Link>\n        )}\n      </div>\n\n      {photosStatus === 'loading' &&\n      <LoadingOutlined className='loading'/>}\n\n      {photosStatus === 'succeeded' &&\n      <ShowMore handleShowMore={handleShowMore} />}\n\n      {photosStatus === 'failed' &&\n      <div className='error'>\n        {error}\n      </div>}\n\n    </div>\n  );\n};\n\nexport default Photolist;\n","import React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Modal.scss';\n\n/*\n * TODO\n * 1) Trap focus in modal: https://tinloof.com/blog/how-to-create-an-accessible-react-modal/\n * 2) Use Portal to place the modal in the right place in DOM tree (after navigation bar).\n *    This is necessary so that keyboard focus will be in logical place when modal opens.\n *    Now the modal is at the end of the page. Make sure you can still send link to /info\n *    and that works with Portal.\n *    https://levelup.gitconnected.com/lets-build-a-functional-reusable-modal-component-in-react-with-portals-edff0b8d4bf7\n */\n\nconst Modal: React.FC = ({ children }) => {\n  const history = useHistory();\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  /* Close modal by navigating to the root */\n  const closeModal = () => {\n    history.replace({pathname: '/'});\n  };\n\n  /* If mouse is clicked outside modal, close modal */\n  const handleClickOutside = (e: MouseEvent) => {\n    if (modalRef.current !== null && (!modalRef.current.contains(e.target as Element))) {\n      closeModal();\n    }\n  };\n\n  /* Close modal if mouse clicked outside of it */\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  /* Close modal with ESC */\n  useEffect(() => {\n    function keyListener(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    }\n    document.addEventListener('keydown', keyListener);\n    return () => document.removeEventListener('keydown', keyListener);\n  });\n\n  return (\n    <div className='modal-bg' role='dialog' aria-modal='true'>\n      <div ref={modalRef} className='modal-wrapper'>\n        <button onClick={() => closeModal()} className='close'>X</button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './Info.scss';\n\nconst Info: React.FC = () => {\n  return (\n    <div className='info-content'>\n      <h3>What is this?</h3>\n      <p>\n        This app is created for you to enjoy beautiful photographs shared by people from\n        all around the world.\n      </p>\n      <p>\n        Here you can calm down and focus on the essential - the photographs.\n        There are no notifications or anything else that could distract you.\n      </p>\n      <h3>Whose photos are these?</h3>\n      <p>\n        This app fetches data from\n        {' '}\n        <a href='https://unsplash.com/developers' target='_blank' rel='noreferrer'>\n          Unsplash API\n        </a>. Every photo view has a link to the original full-sized photo.\n      </p>\n      <h3>Who made this?</h3>\n      <p>\n        The app is created by a hobbyist web developer\n        {' '}\n        <a href='https://github.com/nellileinonen' target='_blank'  rel='noreferrer'>\n          Nelli Leinonen\n        </a>.\n        {' '}\n        Source code on\n        {' '}\n        <a href='https://github.com/nellileinonen/photoinsp' target='_blank' rel='noreferrer'>\n          GitHub\n        </a>.\n      </p>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/rootReducer';\nimport './PhotoMeta.scss';\n\nconst PhotoMeta: React.FC = () => {\n  const createdAt = useSelector((state: RootState) => state.photo.photo.createdAt);\n  const fullUrl = useSelector((state: RootState) => state.photo.photo.fullUrl);\n\n  return (\n    <div className='photo-meta'>\n      {createdAt}\n      <br/>\n      <a href={fullUrl} target='_blank' rel='noreferrer'>Full-sized</a>\n    </div>\n  );\n};\n\nexport default PhotoMeta;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/rootReducer';\n\nimport './UserIntro.scss';\n\nconst UserIntro: React.FC = () => {\n  const userImgUrl = useSelector((state: RootState) => state.photo.photo.userImgUrl);\n  const userRealName = useSelector((state: RootState) => state.photo.photo.userRealName);\n  const username = useSelector((state: RootState) => state.photo.photo.username);\n\n  return (\n    <div className='user-intro'>\n      <div>\n        <img src={userImgUrl} alt='' className='user-img'/>\n      </div>\n      <div className='user-name'>\n        <p>\n          {userRealName}\n          <br/>\n          Username: {username}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserIntro;\n","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhoto } from '../../redux/photoSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nimport PhotoMeta from './photoMeta/PhotoMeta';\nimport UserIntro from './userIntro/UserIntro';\n\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './Photo.scss';\n\nconst Photo: React.FC<{photoId: string}> = ({ photoId }) => {\n  const dispatch = useDispatch();\n\n  const photo = useSelector((state: RootState) => state.photo.photo);\n  const photoStatus = useSelector((state: RootState) => state.photo.status);\n  const error = useSelector((state: RootState) => state.photo.error);\n\n  useEffect(() => {\n    dispatch(fetchPhoto(photoId));\n  }, [dispatch, photoId]);\n\n  return (\n    <div className='photo-view'>\n      {photoStatus === 'loading' &&\n      <LoadingOutlined className='loading'/>}\n\n      {photoStatus === 'succeeded' &&\n      <>\n        <img src={photo.regularUrl} alt={photo.alt} className='regular-photo'/>\n        <PhotoMeta />\n        <UserIntro />\n      </>}\n\n      {photoStatus === 'failed' &&\n      <div className='error'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Photo;\n","import React from 'react';\nimport './Header.scss';\n\nconst Header: React.FC = () => {\n  return (\n    <header>\n      <h1>Photoinsp</h1>\n      <h2>Browse photos, relax and get inspired</h2>\n      <div className='divider'>\n        <span className='line'></span>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './NoMatch.scss';\n\nconst NoMatch: React.FC = () => {\n  return (\n    <div className='no-match'>\n      <p>\n        The page you requested could not be found.\n        <br/>\n        Please, continue browsing to the\n        {' '}\n        <Link to='/'>\n          front page\n        </Link>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\n\nimport Photolist from './components/photolist/Photolist';\nimport Modal from './components/header/modal/Modal';\nimport Info from './components/header/info/Info';\nimport Photo from './components/photo/Photo';\nimport Header from './components/header/Header';\nimport NoMatch from './components/noMatch/NoMatch';\n\nconst RootRoutes = () => {\n  // TODO: use proper type\n  // Location unknown nowadays: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/41674\n  const location: any = useLocation();\n\n  const background = location.state && location.state.background;\n\n  let photoId = '';\n  if (typeof location.pathname !== undefined) {\n    const pathElements = location.pathname.split('/');\n    if (pathElements.length === 3 && pathElements[1] === 'photos') {\n      photoId = pathElements.pop();\n    }\n  }\n\n  return (\n    <div>\n      <Switch location={background || location}>\n\n        <Route exact path=\"/\">\n          <Header />\n          <Photolist />\n        </Route>\n\n        <Route path='/info'>\n          <Modal children={<Info />}/>\n        </Route>\n\n        {/* Redirect to the photo list view */}\n        <Route exact path='/photos'>\n          <Redirect to='/'/>\n        </Route>\n\n        <Route path='/photos/:photoId'>\n          <Photo photoId={photoId}/>\n        </Route>\n\n        <Route path='*' >\n          <NoMatch />\n        </Route>\n\n      </Switch>\n\n      {/* Modal view on top of background if background is set */}\n      {background && <Route path='/info'><Modal children={<Info />}/></Route>}\n\n    </div>\n  );\n};\n\nexport default RootRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.scss';\nimport Navigation from './components/header/navigation/Navigation';\nimport RootRoutes from './RootRoutes';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <RootRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}