{"version":3,"sources":["redux/photolistSlice.ts","redux/photoSlice.ts","redux/photographerSlice.ts","redux/photographerPhotosSlice.ts","redux/rootReducer.ts","store.ts","components/header/navigation/Navigation.tsx","components/photolist/thumbnail/Thumbnail.tsx","components/photolist/thumbnailList/ThumbnailList.tsx","components/photolist/showMore/ShowMore.tsx","components/statusIndicators/loading/Loading.tsx","components/statusIndicators/error/Error.tsx","components/photolist/Photolist.tsx","components/header/modal/Modal.tsx","components/header/info/Info.tsx","components/photo/photoMeta/PhotoMeta.tsx","components/photo/photographerIntro/PhotographerIntro.tsx","components/photo/Photo.tsx","components/header/Header.tsx","components/noMatch/NoMatch.tsx","components/photographer/photographerPhotolist/PhotographerPhotolist.tsx","components/photographer/Photographer.tsx","RootRoutes.tsx","App.tsx","index.tsx"],"names":["fetchPhotos","createAsyncThunk","pageNumber","a","axios","get","params","page","response","newPhotos","data","map","item","alt","alt_description","photoId","id","thumbUrl","urls","thumb","username","user","photolistSlice","createSlice","name","initialState","photolist","status","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","Array","isArray","payload","filter","thumbnail","find","length","concat","rejected","fetchPhoto","date","Date","created_at","createdAt","toLocaleString","newPhoto","full","regular","profile_image","small","photoSlice","photo","fetchPhotographer","newPhotographer","photographerId","firstName","first_name","lastName","last_name","bio","totalPhotos","total_photos","totalCollections","total_collections","profileImg","large","photographerPhotosUrl","links","photos","photographerSlice","photographer","fetchPhotographerPhotolist","info","newPhotographerPhotolist","photographerPhotolistSlice","reset","newUsername","actions","rootReducer","combineReducers","photolistReducer","photoReducer","photographerReducer","photographerPhotolist","photographerPhotolistReducer","store","configureStore","reducer","Navigation","location","useLocation","atRoot","pathname","to","className","background","InfoCircleOutlined","Thumbnail","src","ThumbnailList","thumbnails","ShowMore","handleShowMore","onClick","Loading","LoadingOutlined","Error","errorMsg","Photolist","dispatch","useDispatch","useSelector","photosStatus","useEffect","Modal","children","history","useHistory","modalRef","useRef","closeModal","replace","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","keyListener","key","role","aria-modal","ref","type","Info","href","rel","PhotoMeta","fullUrl","PhotographerIntro","userImgUrl","userRealName","Photo","photoStatus","regularUrl","Header","NoMatch","PhotographerPhotolist","Photographer","photographerStatus","RootRoutes","param","undefined","pathElements","split","pop","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32103e9f.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport interface ThumbnailType {\n  alt: string,\n  photoId: string,\n  thumbUrl: string,\n  username: string\n}\n\nexport interface PhotolistState {\n  photolist: ThumbnailType[],\n  // Username is defined if it's a photographer's photo list\n  username?: string,\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  page: number,\n  error: string | null\n}\n\nconst initialState = {\n  photolist: [],\n  status: 'idle',\n  page: 1,\n  error: null,\n} as PhotolistState;\n\n/* Fetch photos from API.\n * Generated action types start with 'photolist/fetchPhotos'\n */\nexport const fetchPhotos = createAsyncThunk('photolist/fetchPhotos', async (pageNumber: number) => {\n  const response = await axios.get('/photolist', {\n    params: {\n      page: pageNumber,\n    },\n  });\n\n  const newPhotos: ThumbnailType[] = response.data.map((item: any) => (\n    {\n      alt: item.alt_description,\n      photoId: item.id,\n      thumbUrl: item.urls.thumb,\n      username: item.user.username,\n    }\n  ));\n  return newPhotos;\n});\n\n/*\n * createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photolistSlice = createSlice({\n  name: 'photolist',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPhotos.pending, (state, action) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(fetchPhotos.fulfilled, (state, action) => {\n        // Photo fetching was successful if the action payload is an array\n        if (Array.isArray(action.payload)) {\n          /* Data in Unsplash updates often and same photos can be fetched multiple times if\n           * the app is left open and after a while the user continues browsing where they left.\n           * Check that new photos fetched are not duplicates of the ones already visible.\n           */\n          const notInPhotolist = (thumbnail: ThumbnailType) => {\n            const found = state.photolist.find((item) => item.photoId === thumbnail.photoId);\n            if (typeof found === 'undefined') {\n              return true;\n            } else {\n              return false;\n            }\n          }\n          const newPhotos = action.payload.filter((item: ThumbnailType) => notInPhotolist(item));\n\n          if (newPhotos.length > 0) {\n            // Update store state: status tells that the fetch succeeded, page tells the next page\n            // to be fetched and photos is the place for photos\n            state.status = 'succeeded';\n            state.page = state.page + 1;\n            state.photolist = state.photolist.concat(newPhotos);\n          } else {\n            state.status = 'failed';\n            state.error = 'Could not load photos. Please, refresh the page to get the newest content!';\n          }\n        } else {\n          // If action payload is something else than an array, fetch failed\n          state.status = 'failed';\n          state.error = 'Could not load photos.';\n        }\n      })\n      .addCase(fetchPhotos.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = 'Could not load photos.';\n      })\n  }\n});\n\nexport default photolistSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface Photo  {\n  alt: string,\n  createdAt: string,\n  fullUrl: string,\n  photoId: string,\n  regularUrl: string,\n  thumbUrl: string,\n  userId: string,\n  userImgUrl: string,\n  userRealName: string,\n  username: string\n}\n\ninterface PhotoState {\n  photoId: string,\n  photo: Photo,\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  error: string | null\n}\n\nconst initialState = {\n  photoId: '',\n  photo: {},\n  status: 'idle',\n  error: null,\n} as PhotoState;\n\n/* Fetch a single photo from API.\n * Generated action types will start with 'photo/fetchPhoto'\n */\nexport const fetchPhoto = createAsyncThunk('photo/fetchPhoto', async (photoId: string) => {\n  const response = await axios.get(`/photolist/${photoId}`);\n  const data = response.data;\n\n  const date = new Date(data.created_at);\n  const createdAt = date.toLocaleString('en-BG');\n\n  const newPhoto: Photo = {\n    'alt': data.alt_description,\n    'createdAt': createdAt,\n    'fullUrl': data.urls.full,\n    'photoId': data.id,\n    'regularUrl': data.urls.regular,\n    'thumbUrl': data.urls.thumb,\n    'userId': data.user.id,\n    'userImgUrl': data.user.profile_image.small,\n    'userRealName': data.user.name,\n    'username': data.user.username\n  };\n\n  return newPhoto;\n});\n\n/*\n * createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photoSlice = createSlice({\n  name: 'photo',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhoto.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhoto.fulfilled, (state, action) => {\n      // Update store state: status tells that the fetch succeeded, photoId is the id of the fetched\n      // photo and photo contains all the necessary info of the photo\n      state.status = 'succeeded';\n      state.photoId = action.payload.photoId;\n      state.photo = action.payload;\n    })\n    .addCase(fetchPhoto.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = 'Could not load photo.';\n    })\n  },\n});\n\nexport default photoSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface Photographer {\n  photographerId: string,\n  username: string,\n  firstName: string,\n  lastName: string,\n  bio: string,\n  totalPhotos: number,\n  totalCollections: number,\n  profileImg: string,\n  photographerPhotosUrl: string\n}\n\ninterface PhotographerState {\n  photographer: Photographer,\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  error: string | null\n}\n\nconst initialState = {\n  photographer: {},\n  status: 'idle',\n  error: null,\n} as PhotographerState;\n\n/* Fetch info of photographer from API.\n * Generated action types will start with 'photographer/fetchPhotographer'\n */\nexport const fetchPhotographer = createAsyncThunk('photographer/fetchPhotographer', async (username: string) => {\n  const response = await axios.get(`/photographer/${username}`);\n  const data = response.data;\n  const newPhotographer: Photographer = {\n    photographerId: data.id,\n    username,\n    firstName: data.first_name,\n    lastName: data.last_name,\n    bio: data.bio,\n    totalPhotos: data.total_photos,\n    totalCollections: data.total_collections,\n    profileImg: data.profile_image.large,\n    photographerPhotosUrl: data.links.photos,\n  };\n\n  return newPhotographer;\n});\n\n/*\n * createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photographerSlice = createSlice({\n  name: 'photographer',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchPhotographer.pending, (state, action) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(fetchPhotographer.fulfilled, (state, action) => {\n        // Update store state: status tells that the fetch succeeded and\n        // photographer contains all the necessary info of the photographer\n        state.status = 'succeeded';\n        state.photographer = action.payload;\n      })\n      .addCase(fetchPhotographer.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = 'Could not load photographer info.';\n      })\n  }\n});\n\nexport default photographerSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { ThumbnailType, PhotolistState } from './photolistSlice';\n\nconst initialState = {\n  photolist: [],\n  username: '',\n  status: 'idle',\n  page: 1,\n  error: null,\n} as PhotolistState;\n\n/* Fetch photographer's photos from API.\n * Generated action types will start with 'photographerPhotolist/fetchPhotographerPhotolist'\n */\nexport const fetchPhotographerPhotolist = createAsyncThunk('photographerPhotolist/fetchPhotographerPhotolist',\n  async (info: any) => {\n    const { username, pageNumber } = info;\n    const response = await axios.get(`/photographer/${username}/photos`, {\n      params: {\n        page: pageNumber,\n      },\n    });\n\n    const newPhotographerPhotolist: ThumbnailType[] = response.data.map((item: any) => (\n      {\n        alt: item.alt_description,\n        photoId: item.id,\n        thumbUrl: item.urls.thumb,\n        username: item.user.username,\n      }\n    ));\n\n    return newPhotographerPhotolist;\n  });\n\n/*\n * createSlice automatically generates action creators and action types\n * that correspond to the reducers and state\n */\nconst photographerPhotolistSlice = createSlice({\n  name: 'photographerPhotolist',\n  initialState,\n  reducers: {\n    // Action type: photographerPhotolist/reset\n    reset: (state, action) => {\n      state.photolist = [];\n      state.username = '';\n      state.status = 'idle';\n      state.page = 1;\n      state.error = null;\n    }\n  },\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n      .addCase(fetchPhotographerPhotolist.pending, (state, action) => {\n        state.status = 'loading';\n        state.error = null;\n      })\n      .addCase(fetchPhotographerPhotolist.fulfilled, (state, action) => {\n        // Photo fetching was successful if the action payload is an array\n        if (Array.isArray(action.payload)) {\n          /* Data in Unsplash updates often and same photos can be fetched multiple times if\n           * the app is left open and after a while the user continues browsing where they left.\n           * Check that new photos fetched are not duplicates of the ones already visible.\n           */\n          const notInPhotolist = (thumbnail: ThumbnailType) => {\n            const found = state.photolist.find((item) => item.photoId === thumbnail.photoId);\n            if (typeof found === 'undefined') {\n              return true;\n            } else {\n              return false;\n            }\n          }\n          const newPhotos = action.payload.filter((item: ThumbnailType) => notInPhotolist(item));\n\n          if (newPhotos.length > 0) {\n            // Update store state: status tells that the fetch succeeded, page tells the next page\n            // to be fetched and photolist is the place for photos\n            state.status = 'succeeded';\n            state.page = state.page + 1;\n            state.photolist = state.photolist.concat(newPhotos);\n\n            // Update also the photographer's username if not already the right one\n            const newUsername = newPhotos[0].username;\n            if (newUsername !== state.username) {\n              state.username = newUsername;\n            }\n          } else {\n            state.status = 'failed';\n            state.error = 'This was the end. You\\'ve seen all the photos!';\n          }\n        } else {\n          // If action payload is something else than an array, fetch failed\n          state.status = 'failed';\n          state.error = 'Could not load photos.';\n        }\n      })\n      .addCase(fetchPhotographerPhotolist.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = 'Could not load photographer\\'s photos.';\n      })\n  },\n});\n\nexport const { reset } = photographerPhotolistSlice.actions;\nexport default photographerPhotolistSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport photolistReducer from './photolistSlice';\nimport photoReducer from './photoSlice';\nimport photographerReducer from './photographerSlice';\nimport photographerPhotolistReducer from './photographerPhotosSlice';\n\nexport const rootReducer = combineReducers({\n  photolist: photolistReducer,\n  photo: photoReducer,\n  photographer: photographerReducer,\n  photographerPhotolist: photographerPhotolistReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport './Navigation.scss';\n\nconst Navigation: React.FC = () => {\n  const location = useLocation();\n  const atRoot = location.pathname === '/';\n\n  return (\n    <nav>\n      <Link\n        to='/'\n        className='home'\n      >\n        Photoinsp\n      </Link>\n      {atRoot &&\n      (\n      <Link\n        to={{\n          pathname: '/info',\n          state: {\n            background: location\n          }\n        }}\n        className='info'\n      >\n        <InfoCircleOutlined />\n      </Link>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './Thumbnail.scss';\n\nconst Thumbnail: React.FC<{ thumbUrl: string, alt: string }> = ({ thumbUrl, alt }) => {\n  return (\n    <img src={thumbUrl} alt={alt} className='thumbnail'/>\n  );\n};\n\nexport default Thumbnail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ThumbnailType } from '../../../redux/photolistSlice';\nimport Thumbnail from '../thumbnail/Thumbnail';\nimport './ThumbnailList.scss';\n\nconst ThumbnailList: React.FC<{ thumbnails: ThumbnailType[] }> = ({ thumbnails }) => {\n  return (\n    <div className='flex-container'>\n      {thumbnails.map((photo: ThumbnailType) =>\n      <Link\n        key={photo.photoId}\n        to={{ pathname: `/photos/${photo.photoId}` }}\n        className='flex-item'\n      >\n        <Thumbnail thumbUrl={photo.thumbUrl} alt={photo.alt} />\n      </Link>)}\n    </div>\n  );\n};\n\nexport default ThumbnailList;\n","import React from 'react';\nimport './ShowMore.scss';\n\nconst ShowMore: React.FC<{handleShowMore: VoidFunction}> = ({ handleShowMore }) => {\n  return (\n    <div className='show-more'>\n      <button onClick={() => handleShowMore()} className='show-more-button'>\n        Show more\n      </button>\n    </div>\n  );\n};\n\nexport default ShowMore;\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './Loading.scss';\n\nconst Loading: React.FC = () => {\n  return (\n    <div className='loading'>\n      <LoadingOutlined />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport './Error.scss';\n\nconst Error: React.FC<{ errorMsg: string | null }> = ({ errorMsg }) => {\n  return (\n    <div className='error'>\n      {errorMsg !== null ?\n      <p>{errorMsg}</p> :\n      <p>Could not load content.</p>\n      }\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotos } from '../../redux/photolistSlice';\nimport { RootState } from '../../redux/rootReducer';\nimport ThumbnailList from './thumbnailList/ThumbnailList';\nimport ShowMore from './showMore/ShowMore';\nimport Loading from '../statusIndicators/loading/Loading';\nimport Error from '../statusIndicators/error/Error';\n\nconst Photolist: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const photos = useSelector((state: RootState) => state.photolist.photolist);\n  const photosStatus = useSelector((state: RootState) => state.photolist.status);\n  const pageNumber = useSelector((state: RootState) => state.photolist.page);\n  const error = useSelector((state: RootState) => state.photolist.error);\n\n  useEffect(() => {\n    // Only fetch initial list of photos once\n    if (photosStatus === 'idle') {\n      dispatch(fetchPhotos(pageNumber));\n    }\n  }, [photosStatus, pageNumber, dispatch]);\n\n  // Dispatch action to fetch photos\n  const handleShowMore = () => {\n    dispatch(fetchPhotos(pageNumber));\n  };\n\n  return (\n    <div>\n\n      <ThumbnailList thumbnails={photos} />\n\n      {photosStatus === 'loading' &&\n      <Loading />}\n\n      {photosStatus === 'succeeded' &&\n      <ShowMore handleShowMore={handleShowMore} />}\n\n      {photosStatus === 'failed' &&\n      <Error errorMsg={error} />}\n\n    </div>\n  );\n};\n\nexport default Photolist;\n","import React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Modal.scss';\n\n/*\n * TODO\n * 1) Trap focus in modal: https://tinloof.com/blog/how-to-create-an-accessible-react-modal/\n * 2) Use Portal to place the modal in the right place in DOM tree (after navigation bar).\n *    This is necessary so that keyboard focus will be in logical place when modal opens.\n *    Now the modal is at the end of the page. Make sure you can still send link to /info\n *    and that works with Portal.\n *    https://levelup.gitconnected.com/lets-build-a-functional-reusable-modal-component-in-react-with-portals-edff0b8d4bf7\n */\n\nconst Modal: React.FC = ({ children }) => {\n  const history = useHistory();\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  /* Close modal by navigating to the root */\n  const closeModal = () => {\n    history.replace({ pathname: '/' });\n  };\n\n  /* If mouse is clicked outside modal, close modal */\n  const handleClickOutside = (e: MouseEvent) => {\n    if (modalRef.current !== null && (!modalRef.current.contains(e.target as Element))) {\n      closeModal();\n    }\n  };\n\n  /* Close modal if mouse clicked outside of it */\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  /* Close modal with ESC */\n  useEffect(() => {\n    function keyListener(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        closeModal();\n      }\n    }\n    document.addEventListener('keydown', keyListener);\n    return () => document.removeEventListener('keydown', keyListener);\n  });\n\n  return (\n    <div className='modal-bg' role='dialog' aria-modal='true'>\n      <div ref={modalRef} className='modal-wrapper'>\n        <button type='button' onClick={() => closeModal()} className='close'>\n          X\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport './Info.scss';\n\nconst Info: React.FC = () => {\n  return (\n    <div className='info-content'>\n      <h3>What is this?</h3>\n      <p>\n        This app is created for you to enjoy beautiful photographs shared by people from\n        all around the world.\n      </p>\n      <p>\n        Here you can calm down and focus on the essential - the photographs.\n        There are no notifications or anything else that could distract you.\n      </p>\n      <h3>Whose photos are these?</h3>\n      <p>\n        This app fetches data from\n        {' '}\n        <a href='https://unsplash.com/developers' target='_blank' rel='noreferrer'>\n          Unsplash API\n        </a>\n        . Every photo view has a link to the original full-sized photo.\n      </p>\n      <h3>Who made this?</h3>\n      <p>\n        The app is created by a hobbyist web developer\n        {' '}\n        <a href='https://github.com/nellileinonen' target='_blank' rel='noreferrer'>\n          Nelli Leinonen\n        </a>\n        .\n        {' '}\n        Source code on\n        {' '}\n        <a href='https://github.com/nellileinonen/photoinsp' target='_blank' rel='noreferrer'>\n          GitHub\n        </a>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/rootReducer';\nimport './PhotoMeta.scss';\n\nconst PhotoMeta: React.FC = () => {\n  const createdAt = useSelector((state: RootState) => state.photo.photo.createdAt);\n  const fullUrl = useSelector((state: RootState) => state.photo.photo.fullUrl);\n\n  return (\n    <div className='photo-meta'>\n      {createdAt}\n      <br/>\n      <a href={fullUrl} target='_blank' rel='noreferrer'>Full-sized</a>\n    </div>\n  );\n};\n\nexport default PhotoMeta;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/rootReducer';\nimport './PhotographerIntro.scss';\n\nconst PhotographerIntro: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const userImgUrl = useSelector((state: RootState) => state.photo.photo.userImgUrl);\n  const userRealName = useSelector((state: RootState) => state.photo.photo.userRealName);\n  const username = useSelector((state: RootState) => state.photo.photo.username);\n\n  // Reset the photographerPhotolist when new photographer is clicked open\n  const handleClick = () => {\n    dispatch({ type: 'photographerPhotolist/reset' });\n  };\n\n  return (\n    <div className='photographer-intro'>\n      <div>\n        <img src={userImgUrl} alt='' className='photographer-img' />\n      </div>\n      <div className='photographer-name'>\n        <p>\n          <Link\n            to={{ pathname: `/photographer/${username}` }}\n            onClick={() => handleClick()}\n          >\n            {userRealName}\n          </Link>\n          <br />\n          Username:\n          {username}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotographerIntro;\n","import React, { useEffect } from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhoto } from '../../redux/photoSlice';\nimport { RootState } from '../../redux/rootReducer';\nimport PhotoMeta from './photoMeta/PhotoMeta';\nimport PhotographerIntro from './photographerIntro/PhotographerIntro';\nimport './Photo.scss';\n\nconst Photo: React.FC<{photoId: string}> = ({ photoId }) => {\n  const dispatch = useDispatch();\n\n  const photo = useSelector((state: RootState) => state.photo.photo);\n  const photoStatus = useSelector((state: RootState) => state.photo.status);\n  const error = useSelector((state: RootState) => state.photo.error);\n\n  useEffect(() => {\n    dispatch(fetchPhoto(photoId));\n  }, [dispatch, photoId]);\n\n  return (\n    <div className='photo-view'>\n\n      {photoStatus === 'loading' &&\n      <LoadingOutlined className='loading' />}\n\n      {photoStatus === 'succeeded' &&\n      (\n      <>\n        <img src={photo.regularUrl} alt={photo.alt} className='regular-photo' />\n        <PhotoMeta />\n        <PhotographerIntro />\n      </>\n      )}\n\n      {photoStatus === 'failed' &&\n      <div className='error'>{error}</div>}\n\n    </div>\n  );\n};\n\nexport default Photo;\n","import React from 'react';\nimport './Header.scss';\n\nconst Header: React.FC = () => {\n  return (\n    <header>\n      <h1>Photoinsp</h1>\n      <h2>Browse photos, relax and get inspired</h2>\n      <div className='divider'>\n        <span className='line' />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NoMatch.scss';\n\nconst NoMatch: React.FC = () => {\n  return (\n    <div className='no-match'>\n      <p>\n        The page you requested could not be found.\n        <br />\n        Please, continue browsing to the\n        {' '}\n        <Link to='/'>\n          front page\n        </Link>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotographerPhotolist } from '../../../redux/photographerPhotosSlice';\nimport { RootState } from '../../../redux/rootReducer';\nimport ShowMore from '../../photolist/showMore/ShowMore';\nimport Loading from '../../statusIndicators/loading/Loading';\nimport Error from '../../statusIndicators/error/Error';\nimport ThumbnailList from '../../photolist/thumbnailList/ThumbnailList';\n\nconst PhotographerPhotolist: React.FC<{ username: string }> = ({ username }) => {\n  const dispatch = useDispatch();\n\n  const photos = useSelector((state: RootState) => state.photographerPhotolist.photolist);\n  const status = useSelector((state: RootState) => state.photographerPhotolist.status);\n  const page = useSelector((state: RootState) => state.photographerPhotolist.page);\n  const error = useSelector((state: RootState) => state.photographerPhotolist.error);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      const obj = {username: username, pageNumber: page}\n      dispatch(fetchPhotographerPhotolist(obj));\n    }\n  }, [dispatch, username, status, page]);\n\n  // Dispatch action to fetch more photos from the photographer\n  const handleShowMore = () => {\n    const obj = {username: username, pageNumber: page}\n    dispatch(fetchPhotographerPhotolist(obj));\n  };\n\n  return (\n    <div className='photographer-photolist'>\n\n      <ThumbnailList thumbnails={photos} />\n\n      {status === 'loading' &&\n      <Loading />}\n\n      {status === 'succeeded' &&\n      <ShowMore handleShowMore={handleShowMore} />}\n\n      {status === 'failed' &&\n      <Error errorMsg={error} />}\n\n    </div>\n  );\n};\n\nexport default PhotographerPhotolist;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotographer } from '../../redux/photographerSlice';\nimport { RootState } from '../../redux/rootReducer';\nimport PhotographerPhotolist from './photographerPhotolist/PhotographerPhotolist';\nimport Loading from '../statusIndicators/loading/Loading';\nimport Error from '../statusIndicators/error/Error';\nimport './Photographer.scss';\n\nconst Photographer: React.FC<{ username: string }> = ({ username }) => {\n  const dispatch = useDispatch();\n\n  const photographer = useSelector((state: RootState) => state.photographer.photographer);\n  const photographerStatus = useSelector((state: RootState) => state.photographer.status);\n  const error = useSelector((state: RootState) => state.photographer.error);\n\n  const profileImg = photographer.profileImg;\n  const firstName = photographer.firstName;\n  const lastName = photographer.lastName;\n  const name = `${firstName} ${lastName}`;\n  const bio = photographer.bio;\n  const totalPhotos = photographer.totalPhotos;\n  const totalCollections = photographer.totalCollections;\n\n  useEffect(() => {\n    dispatch(fetchPhotographer(username));\n  }, [dispatch, username]);\n\n  return (\n    <div className='photographer-view'>\n\n      {photographerStatus === 'loading' &&\n      <Loading />}\n\n      {photographerStatus === 'succeeded' &&\n      (\n      <>\n        <div className='flex-container photographer-container'>\n          <div className='flex-item'>\n            <img src={profileImg} alt={name} className='profile-img'/>\n            <h2>\n              {firstName}\n              <br />\n              {lastName}\n            </h2>\n          </div>\n          <div className='flex-item'>\n            <p>\n              {bio}\n            </p>\n            <p>\n              Username:\n              {username}\n              <br />\n              Photos:\n              {totalPhotos}\n              <br />\n              Collections:\n              {totalCollections}\n            </p>\n          </div>\n        </div>\n        <PhotographerPhotolist username={username} />\n      </>\n      )}\n\n      {photographerStatus === 'failed' &&\n      <Error errorMsg={error} />}\n\n    </div>\n  );\n};\n\nexport default Photographer;\n","import React from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport Photolist from './components/photolist/Photolist';\nimport Modal from './components/header/modal/Modal';\nimport Info from './components/header/info/Info';\nimport Photo from './components/photo/Photo';\nimport Header from './components/header/Header';\nimport NoMatch from './components/noMatch/NoMatch';\nimport Photographer from './components/photographer/Photographer';\n\nconst RootRoutes = () => {\n  // TODO: use proper type\n  // Location unknown nowadays: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/41674\n  const location: any = useLocation();\n\n  const background = location.state && location.state.background;\n\n  let param = '';\n  if (typeof location.pathname !== undefined) {\n    const pathElements = location.pathname.split('/');\n    if (pathElements.length === 3\n      && (pathElements[1] === 'photos' || pathElements[1] === 'photographer')) {\n      param = pathElements.pop();\n    }\n  }\n\n  return (\n    <div>\n      <Switch location={background || location}>\n\n        <Route exact path=\"/\">\n          <Header />\n          <Photolist />\n        </Route>\n\n        <Route path='/info'>\n          <Modal>\n            <Info />\n          </Modal>\n        </Route>\n\n        {/* Redirect to the photo list view */}\n        <Route exact path='/photos'>\n          <Redirect to='/' />\n        </Route>\n\n        <Route path='/photos/:photoId'>\n          <Photo photoId={param} />\n        </Route>\n\n        <Route path='/photographer/:username'>\n          <Photographer username={param} />\n        </Route>\n\n        <Route path='*'>\n          <NoMatch />\n        </Route>\n\n      </Switch>\n\n      {/* Modal view on top of background if background is set */}\n      {background && (\n      <Route path='/info'>\n        <Modal>\n          <Info />\n        </Modal>\n      </Route>\n      )}\n\n    </div>\n  );\n};\n\nexport default RootRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigation from './components/header/navigation/Navigation';\nimport RootRoutes from './RootRoutes';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className='App'>\n        <Navigation />\n        <RootRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}