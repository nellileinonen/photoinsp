{"version":3,"sources":["redux/photosSlice.ts","redux/rootReducer.ts","store.ts","components/header/Header.tsx","components/photolist/Thumbnail.tsx","components/photolist/Photolist.tsx","components/header/Modal.tsx","components/header/Info.tsx","components/photo/Photo.tsx","RootRoutes.tsx","App.tsx","index.tsx"],"names":["fetchPhotos","createAsyncThunk","a","axios","get","response","console","log","data","newPhotos","map","item","id","urls","thumb","alt_description","photosSlice","createSlice","name","initialState","photos","status","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","concat","rejected","rootReducer","combineReducers","photosReducer","store","configureStore","reducer","Header","location","useLocation","to","pathname","background","Thumbnail","photoId","alt","src","Photolist","content","dispatch","useDispatch","useSelector","photosStatus","useEffect","photo","onClick","Modal","children","history","useHistory","modalRef","useRef","handleClickOutside","e","current","contains","target","goBack","document","addEventListener","removeEventListener","ref","className","Info","href","rel","Photo","RootRoutes","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5d0c435.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface PhotosState {\n  photos: any, //[],\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  error: any //string | null\n}\n\nconst initialState = {\n  photos: [],\n  status: 'idle',\n  error: null,\n} as PhotosState;\n\n/* Fetch photos from API \n * Generated action types will start with 'photos/fetchPhotos'\n */\nexport const fetchPhotos = createAsyncThunk('photos/fetchPhotos', async () => {\n  const response = await axios.get('/photos');\n  console.log('in photosSlice response data: ', response.data);\n  const newPhotos = response.data.map((item: any) => (\n    {\n      'photoId': item.id,\n      'thumb': item.urls.thumb,\n      'alt': item.alt_description\n    }\n  ));\n  console.log('in photosSlice newPhotos: ', newPhotos);\n  return newPhotos;\n});\n\n/*\n *\n */\nconst photosSlice = createSlice({\n  name: 'photos',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhotos.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhotos.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      console.log('action payload in extra reducer: ', action.payload);\n      state.photos = state.photos.concat(action.payload);\n      //state.photos = action.payload;\n      console.log('state.photos in extra reducer: ', state.photos);\n    })\n    .addCase(fetchPhotos.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    })\n  },\n});\n\nexport default photosSlice.reducer;","import { combineReducers } from '@reduxjs/toolkit';\nimport photosReducer from './photosSlice'; \n\nexport const rootReducer = combineReducers({\n  photos: photosReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header: React.FC = () => {\n  let location = useLocation();\n\n  return (\n    <header>\n      <Link to='/'>\n        <h1>Photoinsp</h1>\n      </Link>\n      <Link to={{\n        pathname: '/info',\n        state: { background: location }\n        }}\n      >\n        info\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\n// TODO All the info as props or fetched from store directly by photoId\nconst Thumbnail: React.FC<{photoId: string, thumb: string, alt: string}> = ({ photoId, thumb, alt }) => {\n  return (\n    <img src={thumb} alt={alt} />\n  );\n}\n\nexport default Thumbnail;","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotos } from '../../redux/photosSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Thumbnail from './Thumbnail';\n\nconst Photolist: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const photos = useSelector((state: RootState) => state.photos.photos);\n  const photosStatus = useSelector((state: RootState) => state.photos.status);\n  const error = useSelector((state: RootState) => state.photos.error);\n\n  let location = useLocation();\n\n  useEffect(() => {\n    // Only fetch initial list of photos once\n    if (photosStatus === 'idle') {\n      dispatch(fetchPhotos());\n    }\n  }, [photosStatus, dispatch]);\n\n  let content;\n  if (photosStatus === 'loading') {\n    content = <div>Loading...</div>;\n  } else if (photosStatus === 'succeeded') {\n    console.log(photos);\n    content = photos.map((photo: any) => \n      <Link\n        key={photo.photoId}\n        to={{\n          pathname: `/photo/${photo.photoId}`,\n          state: { background: location }\n        }}\n      >\n        {/* TODO All the info as props or fetched from store in Thumbnail directly by photoId */}\n        <Thumbnail photoId={photo.photoId} thumb={photo.thumb} alt={photo.alt} />\n      </Link>\n    );\n  } else if (photosStatus === 'failed') {\n    content = <div>{error}</div>;\n  }\n\n  // TODO fetch more photos\n  const handleClick = () => {\n    console.log('show me more photos');\n  }\n\n  return (\n    <div>\n      {content}\n      <button onClick={() => handleClick()}>Show more</button>\n    </div>\n  );\n}\n\nexport default Photolist;","import React, { useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport './Modal.css';\n\n// TODO: an excellent reference for modal view\n\nconst Modal: React.FC = ({ children }) => {\n  let history = useHistory();\n\n  // TODO: read again this https://www.carlrippon.com/react-refs-typescript/\n  const modalRef = useRef<HTMLInputElement>(null);\n\n  const handleClickOutside = (e: any) => {\n    if (modalRef.current !== null && (!modalRef.current.contains(e.target))) {\n      //console.log('modalRef.current.contains(e.target): ', modalRef.current.contains(e.target));\n      history.goBack();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  return (\n    <div ref={modalRef} className='modal-wrapper'>\n      <Link to='/'>\n        X\n      </Link>\n      {children}\n    </div>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\n//import { Link } from 'react-router-dom';\n\n//const Info: React.FC<{toggleModal(): void}> = ({ toggleModal }) => {\nconst Info: React.FC = () => {\n  return (\n    <div>\n      {/*<Link to='/'>\n        X\n      </Link>*/}\n      <p>\n        This app fetches data from\n        {' '}\n        <a href='https://unsplash.com/developers' target='_blank' rel='noreferrer'>\n          Unsplash API\n        </a>.\n      </p>\n      <p>\n        The app is created by a hobbyist web developer\n        {' '}\n        <a href='https://github.com/nellileinonen' target='_blank'  rel='noreferrer'>\n          Nelli Leinonen\n        </a>.\n        {' '}\n        Source code on\n        {' '}\n        <a href='https://github.com/nellileinonen/photoinsp' target='_blank' rel='noreferrer'>\n          GitHub\n        </a>.\n      </p>\n    </div>\n  );\n}\n\nexport default Info;","import React from 'react';\n\nconst Photo: React.FC = () => {\n  return (\n    <div>\n      img here\n      <img src='' alt='' />\n    </div>\n  );\n}\n\nexport default Photo;","import React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Photolist from './components/photolist/Photolist';\nimport Modal from './components/header/Modal';\nimport Info from './components/header/Info';\nimport Photo from './components/photo/Photo';\n\nconst RootRoutes = () => {\n  // TODO: use proper type\n  let location: any = useLocation();\n\n  let background = location.state && location.state.background;\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\">\n          <Photolist />\n        </Route>\n        <Route path='/info'>\n          <Modal children={<Info />}/>\n        </Route>\n        <Route path='/photo/:photoId'>\n          <Modal children={<Photo />}/>\n        </Route>\n      </Switch>\n\n      {/* Modal view on top of background if background is set */}\n      {background && <Route path='/info'><Modal children={<Info />}/></Route>}\n      {background && <Route path='/photo/:photoId'><Modal children={<Photo/>}/></Route>}\n\n    </div>\n  );\n};\n\nexport default RootRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/header/Header';\nimport RootRoutes from './RootRoutes';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <RootRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}