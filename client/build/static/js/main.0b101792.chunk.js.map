{"version":3,"sources":["redux/photolistSlice.ts","redux/photoSlice.ts","redux/rootReducer.ts","store.ts","components/header/Header.tsx","components/photolist/Thumbnail.tsx","components/photolist/ShowMore.tsx","components/photolist/Photolist.tsx","components/header/Modal.tsx","components/header/Info.tsx","components/photo/Photo.tsx","RootRoutes.tsx","App.tsx","index.tsx"],"names":["fetchPhotos","createAsyncThunk","pageNumber","a","axios","get","params","page","response","newPhotos","data","map","item","alt_description","id","urls","thumb","photolistSlice","createSlice","name","initialState","photolist","status","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","console","log","Array","isArray","payload","concat","rejected","fetchPhoto","photoId","date","Date","created_at","createdAt","toLocaleString","newPhoto","full","regular","user","profile_image","small","username","photoSlice","photo","rootReducer","combineReducers","photolistReducer","photoReducer","store","configureStore","reducer","Header","location","useLocation","to","pathname","background","Thumbnail","thumbUrl","alt","src","ShowMore","handleShowMore","onClick","Photolist","dispatch","useDispatch","photos","useSelector","photosStatus","useEffect","Modal","children","history","useHistory","modalRef","useRef","handleClickOutside","e","current","contains","target","goBack","document","addEventListener","removeEventListener","ref","className","Info","href","rel","Photo","photoStatus","regularUrl","width","fullUrl","userImgUrl","userRealName","RootRoutes","pathElements","split","length","pop","exact","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b101792.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface PhotolistState {\n  photolist: any, //[],\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  page: number,\n  error: any //string | null\n}\n\nconst initialState = {\n  photolist: [],\n  page: 1,\n  status: 'idle',\n  error: null,\n} as PhotolistState;\n\n/* Fetch photos from API\n * Generated action types will start with 'photos/fetchPhotos'\n */\nexport const fetchPhotos = createAsyncThunk('photos/fetchPhotos', async (pageNumber: number) => {\n  const response = await axios.get('/photos', {\n    params: {\n      page: pageNumber\n    }\n  });\n\n  const newPhotos = response.data.map((item: any) => (\n    {\n      'alt': item.alt_description,\n      'photoId': item.id,\n      'thumbUrl': item.urls.thumb,\n    }\n  ));\n  return newPhotos;\n});\n\n/*\n *\n */\nconst photolistSlice = createSlice({\n  name: 'photolist',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhotos.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhotos.fulfilled, (state, action) => {\n      console.log('fulfilled action: ', action);\n      // Photo fetching was successfull if the action payload is an array\n      if (Array.isArray(action.payload)) {\n        // Update store state: status tells that the fetch succeeded, page tells the next page\n        // to be fetched and photos is the place for photos\n        state.status = 'succeeded';\n        state.page = state.page + 1;\n        state.photolist = state.photolist.concat(action.payload);\n      } else {\n        // If action payload is something else than an array, fetch failed\n        state.status = 'failed';\n        state.error = 'Could not load photos.';\n        //state.error = action.payload;\n      }\n    })\n    .addCase(fetchPhotos.rejected, (state, action) => {\n      console.log('failed action: ', action);\n      state.status = 'failed';\n      state.error = 'Could not load photos.';\n      //state.error = action.payload;\n    })\n  },\n});\n\nexport default photolistSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { create } from 'domain';\n\ninterface PhotoState {\n  photoId: string,\n  // TODO\n  photo: any,\n  status: 'idle' | 'loading' | 'succeeded' | 'failed',\n  error: any //string | null\n}\n\nconst initialState = {\n  photoId: '',\n  photo: {},\n  status: 'idle',\n  error: null,\n} as PhotoState;\n\n/* Fetch a single photo from API\n * Generated action types will start with 'photo/fetchPhoto'\n */\nexport const fetchPhoto = createAsyncThunk('photo/fetchPhoto', async (photoId: string) => {\n  const response = await axios.get(`/photos/${photoId}`);\n  const data = response.data;\n\n  const date = new Date(data.created_at);\n  const createdAt = date.toLocaleString('en-BG');\n\n  const newPhoto = {\n    'alt': data.alt_description,\n    'createdAt': createdAt,\n    'fullUrl': data.urls.full,\n    'photoId': data.id,\n    'regularUrl': data.urls.regular,\n    'thumbUrl': data.urls.thumb,\n    'userId': data.user.id,\n    'userImgUrl': data.user.profile_image.small,\n    'userRealName': data.user.name,\n    'username': data.user.username\n  };\n\n  return newPhoto;\n});\n\n/*\n *\n */\nconst photoSlice = createSlice({\n  name: 'photo',\n  initialState,\n  reducers: {},\n  // Use \"builder callback\" syntax as it is recommended with TypeScript\n  extraReducers: builder => {\n    builder\n    .addCase(fetchPhoto.pending, (state, action) => {\n      state.status = 'loading';\n      state.error = null;\n    })\n    .addCase(fetchPhoto.fulfilled, (state, action) => {\n      console.log('fulfilled action: ', action);\n      // Update store state: status tells that the fetch succeeded, photoId is the id of the fetched\n      // photo and photo contains all the necessary info of the photo\n      state.status = 'succeeded';\n      state.photoId = action.payload.photoId;\n      state.photo = action.payload;\n    })\n    .addCase(fetchPhoto.rejected, (state, action) => {\n      console.log('failed action: ', action);\n      state.status = 'failed';\n      state.error = 'Could not load photo.';\n    })\n  },\n});\n\nexport default photoSlice.reducer;","import { combineReducers } from '@reduxjs/toolkit';\nimport photolistReducer from './photolistSlice';\nimport photoReducer from './photoSlice';\n\nexport const rootReducer = combineReducers({\n  photolist: photolistReducer,\n  photo: photoReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Header: React.FC = () => {\n  let location = useLocation();\n\n  return (\n    <header>\n      <Link to='/'>\n        <h1>Photoinsp</h1>\n      </Link>\n      <Link to={{\n        pathname: '/info',\n        state: { background: location }\n        }}\n      >\n        info\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\n// TODO All the info as props or fetched from store directly by photoId\nconst Thumbnail: React.FC<{photoId: string, thumbUrl: string, alt: string}> = ({ photoId, thumbUrl, alt }) => {\n  return (\n    <img src={thumbUrl} alt={alt} />\n  );\n}\n\nexport default Thumbnail;","import React from 'react';\n\nconst ShowMore: React.FC<{handleShowMore: Function}> = ({ handleShowMore }) => {\n  return (\n    <div>\n      <button onClick={() => handleShowMore()}>Show more</button>\n    </div>\n  );\n}\n\nexport default ShowMore;","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhotos } from '../../redux/photolistSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nimport { Link } from 'react-router-dom';\n\nimport Thumbnail from './Thumbnail';\nimport ShowMore from './ShowMore';\n\nconst Photolist: React.FC = () => {\n  const dispatch = useDispatch();\n  \n  const photos = useSelector((state: RootState) => state.photolist.photolist);\n  const photosStatus = useSelector((state: RootState) => state.photolist.status);\n  const pageNumber = useSelector((state: RootState) => state.photolist.page);\n  const error = useSelector((state: RootState) => state.photolist.error);\n\n  useEffect(() => {\n    // Only fetch initial list of photos once\n    if (photosStatus === 'idle') {\n      dispatch(fetchPhotos(pageNumber));\n    }\n  }, [photosStatus, pageNumber, dispatch]);\n\n  // Dispatch action to fetch photos\n  const handleShowMore = () => {\n    dispatch(fetchPhotos(pageNumber));\n  }\n\n  return (\n    <div>\n      {photos.map((photo: any) =>\n      <Link\n        key={photo.photoId}\n        to={{pathname: `/photos/${photo.photoId}`}}\n      >\n        <Thumbnail photoId={photo.photoId} thumbUrl={photo.thumbUrl} alt={photo.alt} />\n      </Link>\n      )}\n\n      {photosStatus === 'loading' &&\n      <div>\n        Loading...\n      </div>}\n\n      {photosStatus === 'succeeded' &&\n      <ShowMore handleShowMore={handleShowMore} />}\n\n      {photosStatus === 'failed' &&\n      <div>\n        {error}\n      </div>}\n\n    </div>\n  );\n}\n\nexport default Photolist;\n","import React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Modal.css';\n\n// TODO: make sure the modal is accessible:\n// https://tinloof.com/blog/how-to-create-an-accessible-react-modal/\n\nconst Modal: React.FC = ({ children }) => {\n  let history = useHistory();\n\n  // TODO: read again this https://www.carlrippon.com/react-refs-typescript/\n  const modalRef = useRef<HTMLInputElement>(null);\n\n  // If mouse is clicked outside modal, close modal by navigating back in history\n  const handleClickOutside = (e: any) => {\n    if (modalRef.current !== null && (!modalRef.current.contains(e.target))) {\n      history.goBack();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  });\n\n  const closeModal = () => {\n    history.goBack();\n  };\n\n  return (\n    <div ref={modalRef} className='modal-wrapper'>\n      {/*goes back to mainpage<Link to='/'>\n        XXX\n      </Link>*/}\n      <button onClick={() => closeModal()}>X</button>\n      {children}\n    </div>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\n//import { Link } from 'react-router-dom';\n\n//const Info: React.FC<{toggleModal(): void}> = ({ toggleModal }) => {\nconst Info: React.FC = () => {\n  return (\n    <div>\n      {/*<Link to='/'>\n        X\n      </Link>*/}\n      <p>\n        This app fetches data from\n        {' '}\n        <a href='https://unsplash.com/developers' target='_blank' rel='noreferrer'>\n          Unsplash API\n        </a>.\n      </p>\n      <p>\n        The app is created by a hobbyist web developer\n        {' '}\n        <a href='https://github.com/nellileinonen' target='_blank'  rel='noreferrer'>\n          Nelli Leinonen\n        </a>.\n        {' '}\n        Source code on\n        {' '}\n        <a href='https://github.com/nellileinonen/photoinsp' target='_blank' rel='noreferrer'>\n          GitHub\n        </a>.\n      </p>\n    </div>\n  );\n}\n\nexport default Info;","import React, { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPhoto } from '../../redux/photoSlice';\nimport { RootState } from '../../redux/rootReducer';\n\nconst Photo: React.FC<{photoId: string}> = ({ photoId }) => {\n  const dispatch = useDispatch();\n\n  const photo = useSelector((state: RootState) => state.photo.photo);\n  const photoStatus = useSelector((state: RootState) => state.photo.status);\n  const error = useSelector((state: RootState) => state.photo.error);\n\n  useEffect(() => {\n    dispatch(fetchPhoto(photoId));\n  }, [dispatch, photoId]);\n\n  return (\n    <div>\n      {photoStatus === 'loading' && <p>Loading...</p>}\n\n      {photoStatus === 'succeeded' &&\n      <>\n      <img src={photo.regularUrl} alt={photo.alt} width='500'/>\n      <p>{photo.createdAt}</p>\n      <p><a href={photo.fullUrl} target='_blank'>Full-size</a></p>\n      <div>\n        <img src={photo.userImgUrl} alt=''/>\n        <p>{photo.userRealName}</p>\n        <p>{photo.username}</p>\n      </div>\n      </>}\n\n      {photoStatus === 'failed' && <div>{error}</div>}\n    </div>\n  );\n}\n\nexport default Photo;","import React from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\n\nimport Photolist from './components/photolist/Photolist';\nimport Modal from './components/header/Modal';\nimport Info from './components/header/Info';\nimport Photo from './components/photo/Photo';\n\nconst RootRoutes = () => {\n  // TODO: use proper type\n  let location: any = useLocation();\n  let background = location.state && location.state.background;\n\n  /* !! SOS !! This is dangerous and stupid !! SOS !! */\n  //console.log('location in rootroutes: ', location);\n  let photoId = '';\n  const pathElements = location.pathname.split('/');\n  if (pathElements.length === 3 && pathElements[1] === 'photos') {\n    photoId = pathElements.pop();\n  }\n\n  return (\n    <div>\n      <Switch location={background || location}>\n        <Route exact path=\"/\">\n          <Photolist />\n        </Route>\n        <Route path='/info'>\n          <Modal children={<Info />}/>\n        </Route>\n        <Route path='/photos/:photoId'>\n          <Photo photoId={photoId}/>\n        </Route>\n      </Switch>\n\n      {/* Modal view on top of background if background is set */}\n      {background && <Route path='/info'><Modal children={<Info />}/></Route>}\n\n    </div>\n  );\n};\n\nexport default RootRoutes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport Header from './components/header/Header';\nimport RootRoutes from './RootRoutes';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <RootRoutes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}